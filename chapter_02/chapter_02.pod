=head1 Chapter 02 - Basic External Library Functions

=head2 Compiling against a library

While it's good to be able to speed-up portions of our code using XS, another
major use of XS is creating bindings to C and C++ libraries.

We will use a relatively simple library to play with called I<Chromaprint>, an
audio fingerprinting library. You will need to install the development files
for it, the headers and sources.

If you're on GNU/Linux you probably have the library in your distribution
resources. If you're on Windows or want to compile it manually, you can find
the sources L<here|https://bitbucket.org/acoustid/chromaprint>.

Open the F<Makefile.PL> and edit the C<LIBS> key to add C<chromaprint>:

    LIBS => ['-lchromaprint'],

This will compile our code with I<Chromaprint>.

=head2 The Smallest Function

Let's start with a simple function that fetches the library version. Add the
following XS code:

    #include <chromaprint.h>

    const char *
    get_version
        CODE:
            RETVAL = chromaprint_get_version();
        OUTPUT: RETVAL

Let's add a test for it. Create a file F<version.t> with the following:

    use strict;
    use warnings;

    use Test::More tests => 1;
    use XSFun ':all';

    is( get_version(), '6.0.0', 'chromaprint version is 6.0.0' );

Try to compile and run the code:

    perl Makefile.PL && make && make test

